- http://etchjs.com/
- http://blogs.atlassian.com/2013/03/git-submodules-workflows-tips/
- https://github.com/substack/stream-handbook
- http://www.pandaclub.ch/tools/editor/
- https://github.com/antoniogarrote/rdfstore-js
- gpick (on Squeak colours)
- http://www.peer-server.com/
- Interstices
  - egg banjo
- http://www.haskell.org/haskellwiki/Yampa
- https://medium.com/code-adventures/a940ee20862d
- http://learnxinyminutes.com/
- https://probmods.org/
- repeatedly hear "We switched from X to Y. X didn't work and Y works." Would prefer "Our purpose is P. Y served that purpose better than X"
- clojure
  - https://code.google.com/p/counterclockwise/
  - check agents
- agents - ability to clone (or destroy) themselves automatically
  - https://github.com/stagas/drama
  - http://en.wikipedia.org/wiki/Actor_model
  - https://github.com/mental/webactors
  - https://github.com/Gozala/actor
  - https://nodejsmodules.org/tags/actors
- site components
  - list : http://www.stratecomm.com/faqs/components/
  - http://app.imcreator.com/edit
- https://www.firebase.com/docs/data-structure.html
- spreadsheet http://jsfiddle.net/ondras/hYfN3/
- https://www.gov.uk/designprinciples
- Reference
  - Tech
    - RDFa parser in clojure/JS https://github.com/niklasl/clj-rdfa
    - http://msgpack.org/
    - Data-Driven Documents
      - http://d3js.org/
    - https://www.facebook.com/notes/facebook-engineering/under-the-hood-the-entities-graph/10151490531588920
    - unhosted
      - What are servers/clients best for?
        - server
          - data - space!
          - intensive processing
        - client
          - comms? because it's nearer the user
      - https://unhosted.org/
      - http://remotestorage.io/
    - UX manifesto http://www.sketchin.ch/en/manifesto/
    - Evolutionary forms & User Intent
      - http://searchengineland.com/google-hummingbird-when-evolutionary-becomes-revolutionary-173740
    - https://github.com/topliceanu/text-summarization
    - https://github.com/sockethub/sockethub
    - https://sharesome.5apps.com/?
    - https://5apps.com/deploy/apps/527fb1d0288528228700045d/deployments
    - https://github.com/skddc/sharesome
    - http://john.onolan.org/ghost
    - http://www.w3.org/wiki/IntegrityIsJobOne
    - https://github.com/indexzero/http-agent
    - https://github.com/einars/js-beautify
    - https://github.com/commonsmachinery/rdfa-glue.js
    - https://github.com/digitalbazaar/jsonld.js/blob/master/js/request.js
    - http://tiddlypocketbook.com/
    - http://activitystrea.ms/
    - http://indiewebcamp.com/webmention
    - https://github.com/einaros/ws
    - https://trello.com/tour
    - yes! http://boagworld.com/demos/sitemap/
    - Javascript / node.js / browser
      - http://www.fieg.nl/infinite-ajax-scroll-a-jquery-plugin
      - executable node.js
        - https://github.com/crcn/nexe
      - Triplestore wrapper for HTML5 WebStorage
        - http://www.w3.org/2013/04/semweb-html5/triplestoreJS/
      - Visualization
        - http://jowl.ontologyonline.org/
      - Javascript tutorials
        - http://javascript.crockford.com/private.html
        - http://dailyjs.com/2012/06/18/js101-this/
      - node.js modules in the browser
        - http://browserify.org/
      - functional prog
        - replace loops with transformations
      - http://rdfa.info/play/ - has visualization
    - http://en.wikipedia.org/wiki/Comparison_of_web_application_frameworks
    - http://stackoverflow.com/questions/1911015/how-to-debug-node-js-applications
    - http://dailyjs.com/2010/01/08/learning-javascript/
  - Misc
    - http://webseitz.fluxent.com/wiki/WikiLog
    - http://www.angelacolter.com/breadcrumbs/
    - https://github.com/Widen/fine-uploader
    - http://boagworld.com/design/user-personas/
  - LazyWeb
    - http://www.ironicsans.com/ideas/
  - 
- Seki/Trellis is it's own tutorial
- HTTP Patch
- merge this into IBIS
  - http://subforum.org/ecm/
  - http://www.slideshare.net/gilesphillips/evolutionary-conceptual-models-midwest-ux-2012
- agents over websockets
- github pages (for everything!)
- semanticCMS http://magnode.org
- File System indexing/search
  - run HTTP server at fs / ??
  - https://github.com/andreyvit/fsmonitor.js
    - trigger HTTP messages on changes
  - Stanbol for analysing
  - RDF representation
  - HTML projection - make FS linky
- what functionality can be moved server -> browser
  - ditto browser -> browser
  - generic solution : location-agnostic, portable code, cf Fielding 5.1.7 Code-On-Demand
  - node.js ftw
  - http://programmers.stackexchange.com/questions/123718/how-do-i-add-another-script-engine-to-web-browsers-under-linux-windows-mac
- TODO
  - Seki
    - analytics
    - check https://www.quantcast.com/learning-center/guides/webmeasurement
    - ttracker
  - Seki - sign in with twitter
    - https://dev.twitter.com/docs/auth/implementing-sign-twitter
    - http://bytespider.github.com/jsOAuth/
  - DuckDuckGo API
  - Tent
    - http://tent.io/docs
  - Jena vid: http://vimeo.com/14569996
  - kernels: http://videolectures.net/mlss07_scholkopf_intkmet/
  - ToBlog
    - RWW, JSON, surface area and agents
      - the better things are described, the more reusable they are
      - http://www.w3.org/Submission/2012/02/
      - http://lists.w3.org/Archives/Public/public-rww/2012Apr/0025.html
    - Lone Wolf dev in a community
      - https://www.facebook.com/danny.ayers/posts/10150666977117475
      - https://plus.google.com/u/0/104323674441008487802/posts/KYwmT2qE9VL
      - http://iamsamy.blogspot.it/2012/04/where-is-casual-programming.html
  - SPICE vocab
  - Resume
    - graph of interests
    - timeline?
    - http://patametadata.blogspot.it/2012/04/semantic-html-resume.html
  - Real World
    - Font
  - http://141.89.225.43/patchr/
  - agent model!
    - js in models http://www.ilrt.org/discovery/2001/03/rdf-moo/
    - called from HTML or node engine etc.
  - microdata/RDFa templater
  - SWIB hook to remote store - fuseki GUI
  - transclusion - apply to <a href="..." rel="include"
  - https://hacks.mozilla.org/2011/11/insertadjacenthtml-enables-faster-html-snippet-injection/
  - little language based on XML proc
  - Distributed Comments : custom trackback (as comments alternative)
    - enter URL of your comment (it should be publicly-readable)
    - enter title to display on link
    - enter your name or alias
    - enter your personal URI (optional)
      - requirements : the target must include a link to the post you are commenting on
    - comment on Twitter, FB, G+
    - allow me to add related links
  - Pub-Sub on URI templates
    - a feed tells you there's been a change in a resource "range"
  - RWW list mail - WebID and APIs
  - 2012-12
    - + no-links rendering
    - "Web Outline" - links-only rendering
  - Daily
    - 1/2 hr sites
    - 1/2 hr reading
  - General
    - Mailing List
      - add links
        - github pages
        - blog
        - etc.
        - fix danny.ayers.name
        - Position Statement
        - FOAF
        - dating page
    - G+ pages for all domains & projects
- Real-World Projects
  - New Place
    - Roof
      - fix leaks
    - Garden
      - tidy
      - plant veg.
    - Chicken Shed
      - fix up
    - Bedroom
      - skirting board/conduit
      - decorate
    - Bedroom
      - fixup window
    - Bathroom
      - internal window
      - decorate
    - Shower Room
      - fixup window
      - fix mirror
      - decorate
    - Lab
      - clear out
      - fixup window
      - decorate
    - Lab
      - fix boiler
      - plumb in sink
      - plumb in washing machine
      - new radiator
    - Back Stairwell
      - decorate
    - Music Room
      - decorate
    - Soppalco
      - top rails
      - banister
    - Living Room
      - small window
      - de-gap floor
      - big windows
    - Front Stairwell
      - rails
      - banister
      - skirting board
    - Kitchen
      - plumb in dishwasher
      - cooker
      - shelves
      - tidy woodwork
      - cement window
    - Dog Garden
      - mow
    - Human Garden
      - fence
    - Field
      - tidy
    - Drive
      - tidy
      - gravel
    - Workshop
      - fixup doors
      - fixup steps
    - Back Wall
      - window grille
    - Garden
      - tidy
      - landscape
    - Yard
      - tidy
    - Pizza Oven
      - fix
    - Wall
      - clear ivy
    - Workshop
      - tidy
    - Cantina
      - clear
      - new radiator
      - shelves
      - flood prevention
    - Other
      - geometra : get in my name & signoff
      - phone/net connection
      - Sky dish
      - furnish
      - move in!
  - Chess set
    - King`s height should be about 9.5 cm. The diameter of the King`s base should measure 40 to 50% of its height.
    - the size of a square should be twice the diameter of a pawn’s base. It is recommended that a side of the square should measure 5 to 6.5 cm
    - The size of a table should have a minimum length of twice the length of the chessboard and a width of 15 – 20 cm more than the chessboard. It is recommended to use tables with a minimum size of 120 x 80 cm for top level FIDE tournaments.
    -  the size of a square should be twice the diameter of a pawn’s base. It is recommended that a side of the square should measure 5 to 6.5 cm.
    - The King`s height should be about 9.5 cm (3 3/4"). The diameter of the King`s base should measure 40 to 50% of its height.
      "dsdfsdfsd"
    - Pieces
      - King - 3&3/4 x 1&3/4 ... 9.5 x 4.5
      - Queen - 3&1/2 x 1&3/4 ... 8.9 x 4.5
      - Bishop - 3 x 1&1/2 ... 7.6 x 3.8
      - Knight - 2&3/4 x 1&1/2 ... 7 x 3.8
      - Rook - 2&1/2 x 1&1/2 ... 6.4 x 3.8
      - Pawn - 2 x 1&1/4 ... 5 x 3.2
    - Lewis
      - red & white, The heights of the pawns range from 3.5 to 5.8 cm, while the other pieces are between 7 and 10.2 cm. 
      - moulds £19 http://www.plastercraftingforfun.com/product_details.php?products_id=3 
    - bishop with trunk & tusks
  - Analog Computer
    - http://www.rapidonline.com/Cables-Connectors/4mm-Panel-Mounting-Test-Sockets-83058
  - 3D Codex Seraphinianus
    - http://onestonedcrow.blogspot.it/2010/02/codex-seraphinianus.html
- Software Projects
  - Seki
    - TODO 2013-11-27
      - Bugs
        - no handling for creation without /pages/
          - (JSONHandler called)
          - (need handlers for whole graphs PUT/GET)
          - /graphs?
      - Tests
        - add rdfs:label to test data
        - create (POST) page needs check for exists? 409 Conflict
        - add tests for Bootstrap (--init) - especially around SparqlUtils.js
        - TemplatingResponseHandler needs update (DELETE/INSERT)
      - Refactoring
        - rearrange icons (destructive last)
          - up/down on LEFT
        - check client against https://github.com/jpillora/jquery.rest
        -  * TODO remove ...Template from  template names
        - namespace Trellis 
          - http://www.adequatelygood.com/JavaScript-Module-Pattern-In-Depth.html
          - http://elegantcode.com/2011/01/26/basic-javascript-part-8-namespaces/
          - http://www.sitepoint.com/my-favorite-javascript-design-pattern/
          - extra :
          - http://javascriptweblog.wordpress.com/2010/12/07/namespacing-in-javascript/
          - http://www.kenneth-truyers.net/2013/04/27/javascript-namespaces-and-modules/
          - http://www.yuiblog.com/blog/2007/06/12/module-pattern/
        - move to underscore templating
        - bring in new fonts (where?)
          - in danny/fonts/web
        - colours - check http://flatuicolors.com/
          - Use buttons for the primary action and links for secondary actions
          - demonstrates how to distinguish primary and secondary buttons in his blog UI template on Dribbble. http://dribbble.com/shots/968433-Freebie-PSD-Flat-UI-Kit-2-Blog/attachments/111312
          - http://www.colourlovers.com/palettes/most-favorites/all-time/meta
      - Features
        - add pseudo-page ..../index which will produce a file listing for that dir (and in Turtle?)
        - implement usermanagement
          - http://requirejs.org/
          - usermanager as single-page app?
          - Backbone.js for user forms?
          - https://github.com/powmedia/backbone-forms
          - UI 
            - www/admin/users.html
            - incorporate VIE/create/backbone
          - backend
            - write ASK queries, hook up to auth
        - Trellis
          - handlers for whole graphs PUT/GET
          - wire up - templates/trellis.ftl
          - make a couple of cards
            - post
            - task
            - comment
            - ontology
          - use jQuery accordian
          - note - browser tabs look very like card catalogues
          - Constructs:
            - Card
            - Box
            - single-click add a 
              - Link
              - Note
              - Person
              - Upload (sniff type)
          - write up Trellis constructs
        - Misc
          - swap DC elements for DC terms
          - caching
        - Blog 
          - data CONSTRUCT
          - Backbone.js for entries?
      - refactor
        - move handlers to /handlers
          - one for each media type/method combination
          - pull out commonalities
        - get rid of verbosity
        - pull apart Seki.js
      - TESTS!
      - docs
      - set up as blog
      - ETags etc.
        - http://www.tbray.org/ongoing/When/200x/2007/07/31/Design-for-the-Web
        - http://www.dehora.net/journal/2007/07/earned_value.html
        - http://www.w3.org/1999/04/Editing/
      - dynamic updating - from browser to backend, check http://meteor.com
        - "full DB API on the client"
      - http://sw.deri.org/2007/07/sitemapextension/
      - auth : http://nxg.me.uk/projects/agast/
    - @packrat@ - compulsive hoarder ""
    - UI
      - need principles/guidelines
      - slider for global expand/collapse
      - novel stuff
        - stream/dialogue/threads - completely different UI?
        - left panel acts as view chooser for right panel (both editable)
          - see http://www.dementialab.org/discovery-lab/
        - author-driven UI?
          - offer a quasi-3D way of ^ switching view/prompting menu/dialog...
          - ... by embedding things macro-ish like ^ 
          - (typed links even!)
          - writer can just type them
          - reader can click for menus/rotate perspective
          - sliders!
          - change font if it has children
      - property inspectors/available actions
      - shortcut keys
        - https://github.com/chrisdone/jquery-console
        -  Bash style Ctrl+R history searching of recent commands
      - copy-paste to scratch pad - no mouse involved
      - Finding next task
        - 1. select "TODO"
        - 2. (optional) select Project
        - 3. select task - order by priority/date
        - // TODO bullets into categories A, B or C. A means 'will loose significant value if not done today', B means 'important, but will not loose significant value if not done today', C means 'optional'
        - 
    - single-page controls
      - where googlebot not needed
      - http://addyosmani.com/blog/building-spas-jquerys-best-friends/
      - admin-ish subsections built as single-page apps
    - note sentence hihlighting : http://www.sitepoint.com/getting-started-flat-ui-design/
    - http://www.gnu.org/prep/standards/html_node/Style-of-Change-Logs.html#Style-of-Change-Logs
    - “add”, “remove”, “update”, “refactor”, “fix”,
    - Agendum/ agenda a list of things to be considered or done
    - https://github.com/mhausenblas/turtled
    - http://www.w3.org/TR/void/
    - http://www.joyent.com/developers/node/design
    - Comms
      - HTTP
      - WebSockets
      - Sockets
      - BitTorrent
      - IM
        - IRC
      - email
    - Views
      - Outline
      - Office
        - Formatted Docs
        - Spreadsheets
          - https://github.com/mleibman/SlickGrid
          - http://jlord.github.io/sheetsee.js/
        - Presentation
    - caching!
    - comments
      - on original post
      - comment on comment
      - fork to new thread
    - http://www.slideshare.net/tetsurotoyoda/reverse-mashup-proposal
    - Site Spider
      - extract page titles
      - tags
      - convert to outlines
    - nools-connect-routing
      - DSL for nools for HTTP routing
    - Trellis
      - saving done via Web Worker?
        - http://www.html5rocks.com/en/tutorials/workers/basics/
      - http://api.jquery.com/unload/
      - http://mikehillyer.com/articles/managing-hierarchical-data-in-mysql/
      - http://useless-factor.blogspot.it/2008/01/matching-diffing-and-merging-xml.html
      - 
        - ontology editor
          - (WikiWords as tags)
          - tags to category tree
      - http://en.wikipedia.org/wiki/Nested_set_model
      - Task as List (proc vocab?)
        - Project Vocab
          - http://www.techrepublic.com/article/mini-glossary-project-management-terms-you-should-know/
          - file:///home/danny/workspace/xmlns/project/index.htm
        - Proc
          - file:///home/danny/workspace/xmlns/proc/index.ttl
          - http://en.wikipedia.org/wiki/Functional_reactive_programming
        - extra terms
          - tests : make executable
            - preconditions
            - postconditions
        - examples
          - delicious extractor
            - pull off 
      - TO DO
        - General
          - Save
            - ordered serialise
          - Load
        - Workflowy cloning
          - Basic
            - Expand 
            - Collapse
            - Indent
            - Outdent
            - (or hit 'enter' on an empty line)
            - Move
            - Delete
            - Keyboard shortcuts    (Help
          - Nice
            - Search
            - Zoom in
            - Zoom ou
            - Switch between pages   control + ; : 186
            - Complete
            - Star page  control + shift + ∗
            - Show/hide completed    control + o
            - Add a note
        - Other Priority
          - Block-select
          - Cut
          - Copy
          - Paste
          - two-outline view
            - http://layout.jquery-dev.net/
            - http://css-tricks.com/snippets/html/left-right-halves-layout/
        - Other Nice
          - more control over expand/contract?
          - bold/underline/italics/colour - keypress
          - Export
          - Turtle
          - HTML
          - JSON
          - OPML
          - http://community.wikidot.com/howto:create-and-use-tag-tree
      - outliner: one with infinite scroll
        - a la Squeak sidebars
          - http://srobbin.com/jquery-plugins/pageslide/
          - Tools
            - scratchpad
            - Dashboard
            - SPARQL Endpoint
            - metrics
            - code editor
            - shell (-like)
            - importer
            - spider
            - process manager
              - code runner...
            - audio recorder
            - metadata collector
            - file manager
              - http://en.wikipedia.org/wiki/File_browser
              - Norton Commander style?
            - bookmarklets
            - protocol adapters/proxies
            - stream filters
          - Views
            - (filters)
            - force-directed etc.
            - Blog
            - Document (book)
            - IM/IRC etc
            - Trellis
            - Wiki
            - Photo
            - Calendar
        - pop-out 2nd List
        - pop-out Card
        - pop-out Help (F1 - try on Chrome)
      - Standard icons - that mean same across different views
        - card ([])
        - help (?)
        - advanced (+) or (...)
        - cut/copy/paste
        - back button
        - 
      - Things I want to do
        - Write CV
      - GTD
        - http://web.archive.org/web/20120314155329/http://www.actionmethod.com/methodology
      - Timeline
        - hide until/show periodically - reminders!
      - what common list/hierarchical relations are there?
        - time
        - dependency
        - part/whole - mereology
          - http://www.w3.org/2001/sw/BestPractices/OEP/SimplePartWhole/
      - outlinify existing html page
        - https://code.google.com/p/h5o/
        - http://www.whatwg.org/specs/web-apps/current-work/multipage/sections.html#outlines
        - https://code.google.com/p/h5o/
      - call nodes "Dots" as in things to join
      - Reference
        - https://sites.google.com/site/onlineoutliners/
        - http://www.atpm.com/12.07/atpo.shtml
        - http://www.theoutlinerofgiants.com/outliners#3650051
    - Use remoteStorage-style for binary storage
    - chat + shared, live-editable doc 
    - code in browser, coderunner https://github.com/MatthewMueller/coderunner
      - uses Linux VM sandbox (via docker) OR NOT..
    - https://github.com/coreh/nide
    - source editor
      - nide uses codemirror
      - http://codemirror.net/
    - http://www.concurix.com/debug
    - App Scenarios
      - user can choose the features they want, modes of comms people can contact them with?
      - Feed Reader
        - build for App.net, allow use in Seki
        - Salmon protocol : https://code.google.com/p/salmon-protocol/
        - RDF model
          - http://schema.org/Article
          - http://schema.rdfs.org/mappings/sioc
        - api-driven
          - JSON
        - requirements
          - Minimal
            - add feed URI
            - list feed URIs
            - delete feed URI
            - anyFeed 2 JSON (Universal Feedparser)
            - poll feeds
            - get entries
          - Basic
            - Etags & Last-modified
          - Advanced
            - detect feed URI (from HTML)/bookmarklet
            - import OPML
            - export OPML
          - 
      - availability - I'm online - preferred mode of comms:
        - ping
        - short
        - long
      - http://hillside.net/plop/plop2003/Papers/weiss-web.pdf
      - UX Patterns
        - http://quince.infragistics.com/UX-Design-Patterns.aspx
        - http://www.quora.com/What-are-the-best-online-UX-design-pattern-resources
        - http://ui-patterns.com/patterns/ShoppingCart
        - 
      - Shopping Cart
      - 
    - Principles
      - http://www.w3.org/TR/webarch/
      - a cache of a global address space. Fetch what you like, read/execute : http://moronlab.blogspot.it/2010/01/urbit-functional-programming-from.html?showComment=1263570771214#c6454142774827414532
      - Algebraic types and immutability: Yuck. Your Haskellian / type-theoretical mis-spent youth is showing. Actual computers contain rewritable storage and will likely always contain it. This is something to be celebrated, not a set of genitalia to be shamefully hidden behind a Christian fig leaf.
      - Least Effort!
        - but : a computer system should maximally reward learning : http://www.loper-os.org/?p=861
      - start with View
      - make views potentially editable
      - don't break the Back button
      - Application State is held on the client
        - Fielding : http://groups.yahoo.com/neo/groups/rest-discuss/conversations/topics/3583
        - on shopping carts : http://groups.yahoo.com/neo/groups/rest-discuss/conversations/topics/4832
        - cookies http://www.ics.uci.edu/~fielding/pubs/dissertation/evaluation.htm#sec_6_3_4_2
        - gosling : http://1997.webhistory.org/www.lists/www-talk.1995q3/0354.html
    - handling anyJSON (/any form-encoded)
      - best : send JSON-LD
      - next : include a baseURI
      - minimal : server assumes a baseUR
    - as Platform
      - host apps internally
      - make separate/standalone
        - with a little bit of node shim
    - Blog design
      - nice : http://justinkozuch.com/post/pinterest-hacked-what-do-i-do/
      - http://makemydesignflat.com/
      - "Ask Me Anything" http://www.goatslacker.com/
    - Documentation
      - http://yui.github.io/yuidoc/
    - https://code.google.com/p/linked-data-api/wiki/Specification
    - local storage
      - http://www.w3.org/2013/04/semweb-html5/triplestoreJS/
      - https://github.com/jarednova/jquery-total-storage
      - http://www.jstorage.info/
    - cleaning blog data
      - http://stackoverflow.com/questions/15063870/jtidy-java-api-toconvert-html-to-xhtml
      - http://jena.apache.org/tutorials/rdf_api.html#ch-Reading RDF
      - http://stackoverflow.com/questions/4302567/passing-a-file-as-a-command-line-argument-and-reading-its-lines
    - http://mnot.github.io/hinclude/
    - http://tools.ietf.org/html/rfc6570 // uris templates
    - https://github.com/gf3/sandbox
    - WebHooks (andBlackjack!)
    - make pluginslooklike FB/iPhone apps store
    - move config to json files (so Icanmakeexecutable)
    - http://www.slideshare.net/gkellogg1/jsonld-and-mongodb
      - http://greggkellogg.net/2012/08/json-ld-and-mongodb/
    - read up on streams :
      - https://github.com/joyent/node/wiki/Api-changes-between-v0.8-and-v0.10
    - Rules :
      - replacing typical dispatching/filtering approaches because a *lot* of wiring will be required
      - inputs : path, method, headers - especially 'Content-Type' and 'Accept', 'Authorization' (to get user specs for access control)
      - outputs : handler, target store, sparql template, output template, per-user logging
      - also reasoning over RDF data, FOAF smushing etc. (later)
    - https://drive.google.com/keep/
    - http://about.travis-ci.org/docs/user/languages/javascript-with-nodejs/
    - https://github.com/jed/authom
    - https://github.com/jed/hyperspider
    - per-account access log (c.f. spammed twitter)
    - "stop making me sign up" https://medium.com/design-startups/3c390ea15d1
    - http://arstechnica.com/gadgets/2013/09/fancy-node-js-based-blogging-app-ghost-goes-live-to-backers/
    - http://en.wikipedia.org/wiki/Platform-enabled_website
    - http://www.concurix.com
    - http://en.wikipedia.org/wiki/Comparison_of_text_editors#Basic_features
    - jsonld.js uses request - big package, might be useful
    - try on Google App Engine
    - -------------------------------------
    - dynamic, contextual UI
      - http://en.wikipedia.org/wiki/Context-sensitive_user_interface
      - http://www.youtube.com/watch?feature=player_embedded&v=LfEcHi3tmKY
    - entity extraction
      - build non-common word/Name Like Phrase list
      - assign type to each word/Name Like Phrase
      - auto-lookup in dbPedia
      - check manually
    - http://gruntjs.com/
    - Agents : NoFlow
    - Protocols/Sockets/chat
      - http://socket.io/
      - http://incompl.github.io/cloak/
      - http://weblog.bocoup.com/building-multiplayer-html5-games-with-cloak/
    - Danny Uses
      - programming language etc. encyclopedia
        - lot and lot of links
      - creative writing
      - studio documentation
      - wood tools
      - blogging
      - wiki
      - delicious clone
      - pinterest clone
    - Mish: like a big jumbled mess in a drawer, and he presto...all tidied and sorted and labelled!
    - Minimum Viable Product?
    - Seki Rev 0 March 2013
      - Think Smalltalk
        - What was I thinking?
      - add TinyMCE/RDFaCE
        - need to port proxy.php to node
        - make quasi-Wiki
          - apply optional date & title for bloggish
            - create URI from date?
            - change manage
        - with Tidy for parse errors
          - http://ejohn.org/blog/pure-javascript-html-parser/
      - add ACE code editor
        - make Javascript install/runnable
          - how to sandbox? ACL?
          - Try this out! include a hook in the node.js source
            - switch on/off in config.features {}
        - search box
        - CSS/HTML/freemarker/javascript/turtle/text/sparql
        - template editor
        - Do you want to store changes?
      - bookmarking a la delicious
        - make vocab
        - bookmarklet
        - import delicious links
        - import OPML/ accept RSS feeds
        - pump data to delicious API
          - http://mashupguide.net/1.0/html/ch14s02.xhtml
            - The add Submethod
          - https://delicious.com/developers/addnewbookmark
          - https://github.com/bnoguchi/everyauth#readme
      - Tribulator data browser TabulatorNG
        - http://mbraak.github.com/jqTree
        - http://jqueryui.com/accordion/ for content
      - add sources 
        - http://dannyayers.com/sparql?query=
        - dbPedia
      - refactor out verbosity
      - merge itemTemplate and contentTemplate
      - replace creativeMap with editor
      - sort out config
      - add tests
      - write up changes & next to-do
        - https://github.com/danja/seki/commits/master
    - Seki Rev 1
      - auth - check what Connect offers
      - check http://createjs.org/ as alternative to tinyMCE
        - add manual annotations
      - ACL
      - upload files
      - package for npm
      - http://lab.hakim.se/reveal-js
      - docs/screencast
        - 2-part 
          - user
          - dev
      - timeline view
        - gannt chart
          - http://bl.ocks.org/dk8996/5538271
      - ETag and Last-Modified 
        - http://www.intertwingly.net/blog/2006/11/22/Detecting-Not-Modified-Reliably
      - version control
        - when editing an existing doc, offer "Archive previous version" checkbox
        - http://example.org/Example_2013-03-31Z12:30
      - purplify
        -  add <a name="" /> markers to every paragraph (a node ID NID123)
        - http://www.mnot.net/blog/2004/05/30/fragid_redux - has css
        - http://web.archive.org/web/20050309004010/http://simon.incutio.com/archive/2004/05/30/plinks - has js
        - tim bray :
          - <p id="p-21">
          - http://www.tbray.org/ongoing/ongoing.js
          - http://www.tbray.org/ongoing/When/200x/2004/05/29/PurpleNumbers#p-25
          - http://www.tbray.org/ongoing/When/200x/2004/05/31/PurpleAgain
            - hash and/or pilcrow?
        - make every <h4> etc. into a target
      - twitter clone
        - http://net.tutsplus.com/tutorials/html-css-techniques/build-a-twitter-clone-from-scratch-the-design/
      - dataset metadata
        - http://blog.ldodds.com/2013/03/04/what-does-a-dataset-contain/
      - turtle mode for ACE 
        - http://ace.ajax.org/tool/mode_creator.html
      - markdown editor
        - https://github.com/evilstreak/markdown-js#readme
        - https://github.com/kates/html2markdown
        - https://code.google.com/p/pagedown/wiki/PageDown
    - Seki Requirements
      - Inspirations 
        - Unix : kernel, shell, utilities
        - Smalltalk
        - emacs
        - imagine a world where many people have ideas and can turn those ideas into reality, without having to join a large organisation and give up a part of the value that they create 
          - 
      - Core
        - templating infrastructure
        - RESTful API
          - media types
        - editors for primary media types
        - admin interface
        - authentication
        - call external stores
        - support reflection a la Smalltalk
          - http://en.wikipedia.org/wiki/Reflection_(computer_science)
        - support plugins
          - add media type
        - support themes
          - at least two very different
      - comprehensive tests
      - comprehensive documentation
      - demos
        - CMS
          - blog
          - bookmarker
          - wiki
        - pipeline - call external services
      - npm packaged
    - Seki Apps
      - Facebook App
        - archive people's timelines
        - searchable
      - iPhone App?
      - Periodic table
        - maybe not - already got this
          - http://www.ptable.com/
        - http://www.rsc.org/periodic-table
        - http://www.csrri.iit.edu/periodic-table.html
        - prime with Wikipedia
      - Almanac!
        - http://en.wikipedia.org/wiki/Almanac
        - http://www.almanac.com/
        - prime with Wikipedia
        - add a little bit of info every day
        - http://www.infoplease.com/almanacs.html
          - check the sidebar
      - Algorithm reference/of the week
      - Adaptive Case Management
        - http://calipso.abiss.gr/
        - http://en.wikipedia.org/wiki/Advanced_case_management
          - "The tasks required by a case usually involve creating a case folder or container for all required artifacts."
        - is Business process management but dynamic, unstructured
        - people, roles, workflows, tasks and assets
        - http://acmisis.wordpress.com/what-is-adaptive-case-management-acm/
        - 
      - Dribbble https://dribbble.com
        - Join Dribbble today and you’ll be able to…
        - Find & follow
        - Discover designers and the projects they’re working on.
        - Save your faves
        - Create an inspiration stream from your favorite shots.
        - Create buckets
        - Save and organize shots from any designer into Buckets.
        - Go Pro and hire designers
        - Purchase a Pro account to Find Designers by location and skills, contact members about work opportunities, make member lists, and more.
    - Fuseki in a Box
      - startup: 
        - run locally
        - connect to existing store
      - panes
        - add triples (model dropt-down)
        - delete triples " + clear model
        - query
      - add IdeaGraph-style drop box for Upload to Cloud
      - - nah, better: a directory that eats whatever you drop into it
      - http://www.activestate.com/blog/2012/03/install-stackato-micro-cloud-one-command
    - Seki misc
      - Google Drive API - use as model
        - https://developers.google.com/api-client-library/javascript/samples/samples
        - 
      - rules
        - https://github.com/C2FO/nools
        - http://blog.dougamartin.com/2012/05/getting-started-with-nools.html
        - http://www.agfa.com/w3c/euler/rdfs-rules.n3
      - move to bergi's node-rdf https://github.com/bergos/node-rdf
      - look into https://github.com/amdjs/amdjs-api/wiki/AMD
      - https://twitter.com/#!/juansequeda/status/191909820486533120
      - https://twitter.com/#!/Swissdat/status/191912356958310400
      - TODO
        - read http://www.w3.org/2011/09/LinkedData/Report
        - http://www.html5rocks.com/en/mobile/responsivedesign/
        - http://www.w3.org/TR/Content-in-RDF10/
        - think about multi-instance (agent model)
        - admin utilities: save/drop/load commands
          - bake/unbake done
          - would need to disable auto-file-read where graphs are out of sync
          - make manifest file too
        - bookmarklet
          - tweak post form
          - support bookmark? type
          - support images
        - Admin Utilities 
          - graph copy, delete, rename
            - cool URIs note
        - Use XHTML fragments, deliver using AHAH
          - http://domscripting.com/presentations/xtech2006/
            - http://duganchen.ca/single-page-web-app-architecture-done-right/
            - https://github.com/mpuig/hijax
          - https://github.com/ded/Reqwest
        - set up support for GET "application/json"
          - JSONHandler
          - separate query section from serving section
        - refactor GET "text/html" to shape of JSONHandler
        - move current handling of RDF to RDFHandler
          - ?? named graphs straight proxy to Fuseki?
        - proxy SPARQL & HTTP Update to Fuseki
          - Accept type
            - may be tricky with SPARQL SELECT vs. CONSTRUCT
            - plus PUT etc.
        - use mustache templating
          - https://github.com/janl/mustache.js#readme
        - work on headers: cache-control etc.
        - mock authentication
        - prepare for client-side RDF
        - put http-proxy based router on input, 
          - Accept: RDF -> auth -> Public
          - Accept: HTML -> Seki -> auth -> Public
        - start test framework
          - Proc
          - http://vocab.deri.ie/rdforms
          - http://www.w3.org/2009/sparql/docs/tests/
        - reorganize packages
        - merge dev branch back into main
        - make packageable
          - http://howtonode.org/how-to-module
          - package.json
          - npm?
        - make use of subdomains: *.photomatt.net. 14400 IN A 64.246.62.114
        - test on server
          - try with Scute
        - implement I Ching service
          - Special Pages (a la Wiki) e.g. list of resources (a la hypermedia discovery)
        - tweak assembler to create another dataset, to support one Public + one Private
        - implement authentication/authorization
          - (see Seki on G+)
          - Basic over HTTP for now
          - ACL based on 
            - http://www.w3.org/ns/auth/acl#
            - see also http://ns.inria.fr/s4ac/v2/s4ac_v2.html
            - roles as in Dominik's papers 
              - http://www.w3.org/community/rww/wiki/AccessControl
            - Bergi's vocab 
              - http://ns.bergnet.org/tac/0.1/triple-access-control#
            - SPIN
              - http://spinrdf.org/spin.html
              - http://spinrdf.org/sp.html
          - http://trueg.wordpress.com/2012/03/19/you-do-not-need-to-know-rdf-or-foaf-to-use-webid/
        - RemoteStorage (and similar) support
          - http://tutorial.unhosted.5apps.com/
          - http://www.firebase.com/how-it-works.html
          - https://github.com/unhosted/openphoto#readme
        - panopticlick auth check?
          - https://www.eff.org/deeplinks/2010/01/primer-information-theory-and-privacy
        - tweak input router to HTTPS as appropriate
        - test with Virtuoso
        - play with templates
          - Go templates:
            - https://plus.google.com/u/0/105544220472422222613/posts/UaU2pCTUFuk
          - incorporate URI templates?
          - DSL? 
            - property paths
            - pipelines
            - affordances
              - javascript in model
        - look into deployment in Cloud
          - http://www.amundsen.com/blog/archives/1116
        - map to agent model
          - https://secure.flickr.com/photos/danja/6788357883/
          - https://secure.flickr.com/photos/danja/5558883807/
        - pick another app to implement 
          - incorporate project vocab
            - bookmarker
              - http://techcrunch.com/2012/04/12/fetchnotes-launches-a-simple-cloud-based-note-taking-service-that-twitter-users-will-love/
              - +notes : tag QI (quick idea :)
            - listy thing
              - http://www.atpm.com/10.03/atpo.shtml
              - http://en.wikipedia.org/wiki/Outliner
              - more direct move-to-outline (two page?)
              - http://www.theoutlinerofgiants.com
          - remember federation
          - /stuff namespace
            - http://open.vocab.org/
        - something using VoID
        - http://demo.lod2.eu/lod2demo
        - http://data.totl.net/
        - http://www.windley.com/archives/2012/03/ways_not_places.shtml
        - http://wiki.webhooks.org/w/page/13385124/FrontPage
        - http://code.google.com/p/elda/source/browse/elda-testing-webapp/src/test/java/com/epimorphics/lda/systemtest/ResponseStatusTests.java
        - http://www.snee.com/bobdc.blog/2012/03/playing-with-sparql-graph-stor.html
      - Seki meta
        - http://www.opensearch.org/Home
        - Sitemap
        - robots.txt
        - VoiD & SPARQL descriptions (w3c)
          - check lov
        -  Atom APP service document
      - Write WADL, use for Java client generation
        - http://apigee.com/docs/console-go/content/wadl-reference
        - CONSOLE
          - https://apigee.com/togo
          -  : http://apigee.com/docs/api-platform/content/set-apigee-api-console
        - https://wadl.java.net/
        - http://bitworking.org/news/193/Do-we-need-WADL
      - https://github.com/danja/seki and https://plus.google.com/b/102910670341143019851/
      - Goals/Purpose/Aims?
        - loosely-coupled platform
        - facilitate connectivity
          - minimizing impedance mismatch
        - multi-instance
        - everything is configurable
          - monitor everything
            - analytics
        - test everything
        - support information processing
          - doc management, data management, message management
        - refactor description
          - current : Seki is a front-end to an independent SPARQL server using node.js
          - new : Personal Linked Data Platform ??
        - support all my planned apps :)
          - yak shaving not bikeshedding!
        - a target : Linked Data Profile - http://www.w3.org/Submission/2012/02/
          - also http://www.w3.org/2012/ldp/charter#scope
          - http://www.w3.org/2001/sw/wiki/TurtlePatch
        - transparent federated queries
          - point the query part at different stores
            - also different for R/W
        - caching ?? (watch get/update ratio, vary cache size correspondingly)
        - scale 
          - aim for ~10 million triples as typical usage
          - dbPedia ~ 1 billion triples
            - http://www.w3.org/wiki/RdfStoreBenchmarking
          - re-read Fuseki & TDB docs
            - optimiser
      - First Application : serve I Ching data
        - Aim (MVP)
          - provide RDF and HTML representations of all (public) resources at individual deref'able URLs
          - HTML representation will support link-based navigation and representation editing through forms
        - clean source data, convert to rough RDF/XML (nearly done)
        - load data
          - one model for all hexagrams
          - one model for vocabs (pipeline input)
        - serve data
          - page templates
        - edit data via HTML forms
      - Play
        - visualizations: check: http://mbostock.github.com/d3/ex/
        - graph viz vihttp://bl.ocks.org/rkirsling/5001347
      - Requirements (based on suggestions from @ephemerian and @kendall)
        - I/O - that's what it's all about
        - views/editing
          - initially add hoc
          - later Fresnel?
            - http://www.w3.org/2005/04/fresnel-info/manual/ ?
        - authentication 
          - Basic over HTTPS
          - https://github.com/magnetik/node-webid
        - authorization 
          - Private store contains ACL
          - initially 
            - Private store admin R/W only, inaccessible directly
            - Public anyone R admin W
        - logging 
          - text - for debugging (must be a node util available)
          - RDF model - for analytics
        - federation
          - it should be trivial to run federated queries
          - SPARQL repository - prepared queries for e.g. selecting by shared interests
        - bake/unbake
        - caching
        - text search
        - throttling
        - versioning
          - layer on top
        - support for Linked Data API
          - http://code.google.com/p/linked-data-api/
        - WebDAV
      - Test Framework
        - http://www.w3.org/2009/sparql/docs/tests/
        - implementation
          - use zombie for HTML bits
          - // what would an RDF zombie look like?
        - Design
          - https://github.com/danja/seki/blob/dev/src/tests/notes.txt
      - Common Graphs
        - ACL
        - event logs
        - registry of other services/Seki instances (federation!)
          - VoID
        - SPARQL repository
      - Nice to have
        - data validation
        - rules/reasoning/explanation/statistical stuff (much later!)
      - UI - use more screen horizontally, with window-thing : http://www.wdyl.com/#linked+data
      - Reference
        - http://www.w3.org/community/rww/wiki/AccessControl
        - http://dvcs.w3.org/hg/cors/raw-file/tip/Overview.html
        - http://trueg.wordpress.com/2012/03/15/webid-a-guide-for-the-clueless/
        - http://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven
        - http://www.w3.org/TR/HTTP-in-RDF10/
        - http://prescod.net/rest/mistakes/
        - http://javascript.infogami.com/Javascript_in_Ten_Minutes
        - http://backbonejs.org/
        - https://github.com/antoniogarrote/rdfstore-js
        - http://howtonode.org/traitsjs
        - http://betterexplained.com/articles/how-to-make-a-bookmarklet-for-your-web-application/
        - https://github.com/shapeshed/nodejsbook.io.examples
        - http://nodeguide.com/beginner.html
        - http://css-tricks.com/snippets/html/post-data-to-an-iframe/
        - 
        - visualization
          - you've got hypertext :
            - http://journals.tdl.org/jodi/article/viewArticle/133/131
          - pathetic fallacy
            - http://swui.semanticweb.org/swui06/papers/Karger/Pathetic_Fallacy.html
          - http://jesusabdullah.github.com/2011/02/26/plolt.html
          - http://solutoire.com/flotr/
          - http://bost.ocks.org/mike/hive/
          - http://code.google.com/p/sgvizler/
          - https://github.com/alangrafu/visualRDF#readme
          - http://codinginparadise.org/projects/svgweb/docs/QuickStart.html
          - http://mbostock.github.com/d3/ex/force.html
      - App Ideas (see separate list)
        - Data augmenter units
          - http://api.duckduckgo.com/
        - SPARQL repository
        - blog
        - Wiki
          - https://www.jottit.com
        - projects
          - https://trello.com/
        - general purpose recommender
          - create a theme
          - add items
          - if you like this -> you'll like that
        - SVG Whiteboard
        - federated...
        - http://ifttt.com/
        - http://notebookjs.me/#
        - allow Listy Thing *Pages*
        - http://techcrunch.com/2012/04/12/fetchnotes-launches-a-simple-cloud-based-note-taking-service-that-twitter-users-will-love/
        - webfinger thing
          - http://tools.ietf.org/html/draft-jones-simple-web-discovery-02
        - the dreaded RSS aggregator
          - https://github.com/danmactough/node-feedparser
        - http://ipython.org/ipython-doc/dev/interactive/htmlnotebook.html
        - http://oli.web.cmu.edu/openlearning/forstudents/freecourses/media-programming
        - http://bionicteaching.com/?p=2176
        - Courseware
          - http://sakaiproject.org/
          - start by taking *exactly this* and expressing it in RDF
            - http://www.inf.unibz.it/~franconi/dl/course/
          - http://labs.mondeca.com/dataset/lov/details/vocabulary_crsw.html
          - create a genuine course?
        - natural history square metre
          - microscope slide
  - Spikes Next Rev
    - scrape
      - http://www.c2.com/cgi/wiki?TopType
      - lambdatultimate
      - http://webseitz.fluxent.com/wiki/FrontPage
  - JEdwards Next Rev
    - click on fie open
  - RDF data viz service
    - simple data derived from well-know terms via SPARQL query
    - rendering done in-browser (quasi-Ajax)
      - http://stackoverflow.com/questions/7034/graph-visualization-code-in-javascript
    - include at least force-directed (with good nav - usable for 1000+? items)
    - query/DB given as URI(s)
    - demo - one specific endpoint
      - show online DB containing details of semweb researchers, companies, tools, services
      - entries can be added via URI -check 
  - Project Management
    -  Issue tracking
      - http://www.w3.org/2005/01/wf/flow.n3 -  Finite state automaton ontology
    - checkworkflows bookfor Task model etc.
    - http://www.edwardtufte.com/bboard/q-and-a-fetch-msg?msg_id=000076
  - Services
    - https://github.com/castagna/SARQ - SARQ - Free Text Indexing for SPARQL
    - http://www.decafbad.com/twiki/bin/view/Main/AgentFrank
  - Virtual Machines
    - http://www.docker.io/
    - http://www.vagrantup.com/
  - Expert System ToDo list app
    - (include workflowdependencies)
    - add task :
      - sliders for characteristics
      - indoor-outdoor
    - scale probability according to conditions
    - http://martinfowler.com/bliki/RulesEngine.html
    - http://docs.jboss.org/drools/release/5.3.0.Final/drools-expert-docs/html/ch01.html
  - Build a catalogue site
    - del.icio.us
    - Lambda the Ultimate
    - programming blogs : http://www.loper-os.org/
    - duckduckgo scrape
    - keyword extraction
      - alchemy API
  - SPICE Vocabulary : Resources
    - Vocabulary homepage : http://purl.org/stuff/spice
    - SPICE Reference
      - Wikipedia : http://en.wikipedia.org/wiki/SPICE 
      - The SPICE Page : http://bwrc.eecs.berkeley.edu/classes/icbook/spice/
      - (Core) Circuit Elements : http://bwrc.eecs.berkeley.edu/classes/icbook/spice/UserGuide/elements_fr.html
        - this may be scrapable for data
    - RDF
      - A Quick Intro (rather old, but still valid) http://www.rdfabout.com/quickintro.xpd
      - RDF at the W3C (specifications etc) : http://www.w3.org/RDF/
  - Scute Next Rev
  - Site Next Rev
    - services
      - http://aksw.org/Projects/SPARQL2NL.html
      - http://rdf-translator.appspot.com/
      - http://mnot.github.com/redbot/
  - Web Beeps
    - Process Modelling
      - http://www.w3.org/TR/xproc/
      - self-replicating thing..?
      - http://www.garshol.priv.no/blog/225.html
    - more write-up
    - "mail Web Beeps"
    - bit of promo - podcasters
    - recorder widget
    - "add beep widget to your site"
    - 
    - vocab
      - real-time vs. not
      - monitoring - durations? heartbeat?
    - Turtle generation
      - describe() - visitor pattern?
    - Cache-control
    - http://code.google.com/p/rdf-pipeline/
  - Each rev is ~ a week
  - WebBeep Next Rev
  - Little Ideas
    - self-contained editable page
    - auto-generate painting by numbers
      - http://www.stoik.com/products/hobby/stoik-color-by-number/
    - contextbot
      - http://xkcd.com/1085/
  - Old
    - JSON-LD context for OS Search API results
    - danbri :
      - What if you wanted to amend RDFa and Microdata to allow markup element trees to be qualified,e.g. by time?
      - http://www.w3.org/wiki/WebSchemas/TemporallyScopedMarkup ... how would that translate into a quads structure?
      - WebSchemas/TemporallyScopedMarkup - W3C Wiki
  - Interstices
    - make model
    - crawler for seeding images?
    - sliders UI
    - Mechanical Turk for seeding data?
    - 
  - Proc
    - Agent Model
      - agents message each other
        - an agent is a computer = a computing unit
          - diagram of computer
          - http://www.c-jump.com/CIS77/CPU/VonNeumann/lecture.html
    - XProc mapping (informative)
    - Implementations
      - framework for Executable RDF
      - http://www.ifttt.com/
      - Beeps - demo GA
      - Synth 
        - modules separated by HTTP!
      - Neural nets (check available libs), classifiers etc
        - http://harthur.github.com/brain/
      - Data consumers
        - anything2RDF set up declaratively, componentized
          - Virtuososponges
        - bit like Fresnel
      - Data producers
        - RDF2anything
      - streaming things : xmpp, ircbot etc
        - emailer?
      - Testing
        - Vocab Validator : Data Stars
          - http://pedantic-web.org/tools.html
          - remember Vapour
          - RDF lint
          - http://ebiquity.umbc.edu/blogger/2012/03/04/lov-secrets-of-the-real-ontologies-of-the-lod-cloud/
          - http://greggkellogg.net/2012/03/18/a-new-rdfa-test-harness
          - term for steward? https://plus.google.com/114406186864069390644/posts/8d239nCmf8d
        - Seki see Seki
      - zip compression chain - demo GA
      - http://www.nada.kth.se/~viggo/problemlist/compendium.html
    - Video!
    - Parameters - refactor nitRandom
    - Visualization
      - http://code.google.com/p/sgvizler/
      - http://code.google.com/apis/chart/interactive/docs/gallery/orgchart.html#Data_Format
    - Dedicated editor
    - Mad Ideas
      - make a computer http://www.c-jump.com/CIS77/CPU/VonNeumann/lecture.html
  - Project vocab
    - https://plus.google.com/107429617152575897589/posts/7pj84m9LT56
  - XMLNS
    - creative 404s
    - vocab wiki
    - VoID
  - Sites
    - Get everything nicely organised and linked
    - add discrete adverts & analytics
    - add RDF for everything - especially images, mp3 & vids
    - microdata/RDFa on index pages (at least)
      - templater?
    - integrate with blog data
    - 
    - Stuff
      - Woodcarving
        - Jigs
        - Knifes
        - Tips
      - Misc
        - stone carving & paintings
      - Tech
  - Blog
    - remove @en from HTML!!!
    - http://marshallk.com/add-one-line-to-your-blog-or-twitter-could-become-your-primary-identity
    - mode switch: skimming/reading
    - ACK button (a la Like, +1)
    - http://www.addthis.com/features#.T2chE4xSQ-o
    - pinterest buttons
    - http://sharethis.com/
    - normal | mobile version | navigation page | data | flesh version
    - next/previous
    - add left sidebar
    - improve font, see http://www.tbray.org/ongoing/misc/Colophon
    - link to Web Beep (My Projects)
      - Web Beep for this post (next to title)
    - fix G+ button
    - fix archives
    - http://labs.mondeca.com/sparqlEndpointsStatus/index.html
    - Google Ads, analytics *everywhere*
    - comments!!!
    - add hit count property?
    - add word count property
    - wtf to do with http://hyperdata.org/microblog/
    - "Buy Me a Coffee" - see
    - VoID
    - Red Pill/Green Pill
    - http://aksw.org/Projects/RDFaCE
    - oEmbed (for twitter)
    - http://tinyurl.com/89g24gr
  - ShareJS
    - http://sharejs.org/
    - http://lifehacker.com/5899346/co+meeting-is-google-wave+inspired-group-collaboration-tool
    - remote pair programming
    - Collaborative Comments : 
      - blog sidebar
        - live edit
        - freeze button (with auth) - adds as comment
    - Wiki
    - Shared Lists
      - on JSON objects? Turtle?
      - http://plcmcl2-things.blogspot.com/
        - http://the23thingsproject.pbworks.com/w/page/20848476/FrontPage
          - 22 Design an Application
    - see also
      - http://flowingdata.com/2012/03/19/live-coding-implemented/
      - http://ace.ajax.org/
      - http://gabrielflor.it/
  - App Ideas
    - Local server
      - server-side component acts as proxy
      - when disconnect, server offers cached
    - analyze coverage of existing apps (a la Interstices)
    - Idea Capture!
      - include prj:helps etc
    - Where are you?
      - situated agents http://en.wikipedia.org/wiki/Situated
      - agents a bit like tamagotchi
      - quasi MOO
      - rooms a la MUD
        - like library rooms
        - like IRC but associated with web resources
        - when you are in a particular room, you can talk to others in that room
        - MyRooms?
      - post link bookmarklet a la del.icio.us
      - background link follower/crawler
      - notify when two people are nearby
    - Link Aggregator
      - http://www.linkrdr.com/links/add_feed/
      - add subscription list : OPML/twitter/whatever
      - accumulate contained links
    - Listy Thing
      - http://plcmcl2-things.blogspot.com/ 23 things
      - http://danja.tiddlyspace.com/
    - http://smiy.sourceforge.net/olo/spec/orderedlistontology.html
    - http://notebookjs.me/#
    - auto-comparison of items in different lists based on text search (like a two-way search)
      - allow symlinking across: sameAs/seeAlso  (actualy sameTopicAs, dc:related?)
    - Web Presentation : pages are slides
      - preset
        - put focus of a page on the link to next slide
      - pre-recorded sequence of URLs (each a "slide")
      - can record audio+cues to run
    - Clonable
      - http://www.clonestop.com/
      - http://www.scriptcopy.com/
      - StackOverflow clone
        - https://github.com/anantgarg/Qwench
      - quasi-REST auth: http://stackoverflow.com/questions/319530/restful-authentication
    - Copy, Transform, Combine (remix vid)
    - Pinterest, not just pictures
      - https://pinboard.in/
    - "Story Behind"/ find sources
      - take a piece like: http://online.wsj.com/article/SB10001424052970203646004577213010291701378.html
      - find the papers
        - possibly;
        - http://www.brainmusic.org/MBB91%20Webpage/Sloboda_1991.pdf
        - http://psy2.ucsd.edu/~vjkpublications/pdf/2010%20The%20influence%20of%20affect%20on%20music%20choice%20Ch.25,%20H-book%20of%20M-E.pdf
        - http://www.getcited.org/pub/102502981
    - Why Wasn't I Consulted
      - http://www.ftrain.com/wwic.html
    - Least Interesting People
      - along the lines of Facebook recommendations, but who you should unsubscribe from
    - I did X because of Y
      - e.g. I learnt how to use SPARQL because of <this post>
    - Hearing test
      - https://plus.google.com/u/0/112609322932428633493/posts/NKcC8DKoyHb
    - https://piazza.com/
    - Big Plans
      - Personal Web Server Proxy service
      - Algorithm repository
      - lazyweb
  - Principle - ??
    - what's shown on blog is determined by a SPARQL query (+?)
    - as the query is changed, what's shown changes in real time
    - // and apply to layout
    - which components are visible?
  - Modules
    - make pipelines a la beeps
    - http://www.snee.com/bobdc.blog/2012/02/pull-rdf-metadata-out-of-jpegs.html
    - http://apigee.com/about/products/free API toolkit
  - Scute
    - Make usable as a text editor
      - Ctrl-S saves etc.
      - sort out tabs
        - one model per tab?
      - format source (do tabs)
      - open Recent (files)
      - smarten up scratchpad
        - http://www.jwz.org/doc/x-cut-and-paste.html
    - Vocab Authoring Assistant (term reuse)
      - point it to proposed vocab in Current graph
      - give it an empty New graph 
      - point it to known candidate vocabs - call them Existing
        - ditto lov, sindice etc.
      - for each of your terms:
        - offer similar terms from Existing (with full descriptions)
          - need similarity measure - algorithms?
        - offer options:
          - sameAs term in Existing
            - (replace) 
              - add advisory annotation to New
            - (reference)
              - add Current term, with sameAs Existing to New
          - similar to existing
            - creating statement in New involving term from Current, subClass | superClass / subProperty | superProperty Existing term
            - copy relevant triples from Current to New
          - genuinely new term
            - copy relevant triples from Current to New 
      - (save New) 
      - check, if ok replace Current with New
      - (later add doc generation tools - specgen or whatever)
    - gnome-do style mode switcher
      - better define modes - modeless UI!
    - undo() - Command pattern
    - evolve scratchpad into clipboard
      - everything that goes on the system clipboard goes on the scratchpad
      - gets minimized to icon
      - mouseover to show contents, click to copy to clipboard
    - make Help editable
    -  a serious programming environment ought to be an intimately-personalized affair, like eyeglasses or a hearing aid
  - Named Graph (including agent stuff)
    - JS nodes corresponding to methods for use in browser?
    - simplest thing that could possible work!
      - Affordances - document (graph)-level triples
  - Manuel
    - as new kind of browser
    - as game - link follower = game player
      - two windows:
        - Adventure-like text interactions
          - change text colour for media type (doc web/data web)
        - low-level net interactions 
        - goals - answering a specifc question
          - get folks to add Easter Eggs to data sets?
    - potted queries etc. in online repository
      - keyed off current URI (e.g. SPARQL endpoints)
      - annotated -title, creator, date, description
    - http://datatracker.ietf.org/doc/draft-gregorio-uritemplate/?include_text=1
    - x = construct(endpointURI, query)
      - http://talideon.com/weblog/2005/07/javascript-memoization.cfm
  - hyperdata.org
    - Docs
      - simple intro to linked data (hypermedia-oriented)
        - add follow-your-nose bits
        - resources are linked
        - the links describe the nature of the resources
    - Seki demonstration
    - Data Sources
      - Vocabs
        - http://labs.mondeca.com/dataset/lov/index.html#VocabListTable
        - https://github.com/danbri/Zoo/tree/master/zoo.foaf.tv/zoo/data
        - see also http://www.w3.org/2010/02/rdfa/profile/data/
      - Freebase data
        - http://basekb.com/
    - 'prentice piece
      - Originally, the term masterpiece referred to a piece of work produced by an apprentice or journeyman aspiring to become a master craftsman in the old European guild system.
    - App registry: all things that produce/consume RDF, VoID etc, how to connect
  - Tokens
    - http://dannyayers.com/stuff/token-thing/source.html
    - icon on a page is a token : ■
      - you can drag that token to the bookmarks bar
      - (it's actually a link or script)
    - empty box on a page is a token receiver : □
      - you can drag a token from the bookmarks bar into the receiver
      - (it's actually an <input> field)
    - what to pass across?
      - form associated with the token that you fill in
      - when you pass the token along, it passes the data from the form fields
    - http://en.wikipedia.org/wiki/Geometric_Shapes
    - http://en.wikipedia.org/wiki/Information_card
  - minify Turtle
    - I bet that by replacing every possible repeated URL (racine?) with a prefix, using minimal prefixes and removing any unnecessary whitespace it'd be possible to halve the size of most Turtle files in the wild.
    - It would blow the human-readability, but then you could always throw in a HTTP X- header or whatever for the small stuff for wherever it was needed, otherwise just supply it normal.
    - Kurt: I've written routines for converting turtle to prefixed notation and putting it into a condensed format where repeated objects are stored on a comma delimited line, predcates use semi-colon based lines to reduce the repetition of subjects and otherwise to get it into a cleaner notation. It no doubt adds a bit to the overall ingest, but it makes debugging turtle files MUCH easier.
  - Online Analogue Computer
    - JSON process runner
      - http://sriku.org/blog/2012/04/14/creating-dsls-in-javascript-using-j-expressions/
    - graph drawing
      - http://jsplumbtoolkit.com/home/jquery.html
      - http://stackoverflow.com/questions/14725834/flowchart-with-jsplumb?rq=1
    - http://www.jointjs.com
    - http://bl.ocks.org/metormote/6392996
- https://github.com/visionmedia/git-extras
- SPARQL-based store sync
  - http://www.w3.org/DesignIssues/Diff
  - Symmetric Concise Bounded Description (SCBD)
    - http://www.w3.org/Submission/CBD/#alternatives
  - RDF Molecules
    - http://ebiquity.umbc.edu/get/a/publication/178.pdf
  - Minimum Self-contained Graph (MSG)
    - http://semedia.deit.univpm.it/submissions/ESWC2005_Poster/ESWC2005_signignRDF.pdf
- Writing Projects
  - The Web Platform book
    - A guide for architects and developers on how to make best use of what the Web has to offer
    - Notes
      - for each chapter 
        - compile list of links
          - specs
          - related docs
          - related software
        - code demos
        - howt
        - summary
    - Introduction
      - http://homepages.cwi.nl/~steven/Talks/2013/01-11-future-internet/
      - http://www.w3.org/TR/ws-gloss/
      - http://en.wikipedia.org/wiki/Separation_of_concerns
      - Motivation
        - Proposal Description
          - With a gentle change in mindset, established well-known standards can be used to decouple system components and simultaneously simplify development and maintenance within the organization. A side effect is expanded opportunities for community development. The link is the key.
        - most developers want to build a product that thrives in its environment - and that environment is the Web
        - bringing well-known benefits of modularity (such as resilience, simplified development and maintenance) to the Web
        - small, distributed projects linkable into a greater whole
        - better exploiting Web standards
    - 
    - Precursors
      - pre-Web
        - Unix philosophy of small cooperating tools with standardized inputs and outputs. It is this philosophy, and the architecture based on it, that has allowed open source projects to be assembled into larger systems such as Linux, without explicit coordination between developers.
        - The Unix Way
          - http://www.pappp.net/?p=969
          -  "Write programs that do one thing and do it well. Write programs to work together. Write programs to handle text streams, because that is a universal interface."
          - keep it simple
          - everything is a file
          - programs that do oe thig ad do it well
          - programs that work together
            - doesn't work for graphic apps
          - portability over efficiency
          - data i flat text files
            - for reusability
          - use software leverage (reuse)
          - use shell scripts for portability & leverage
          - user knows what they are doing (rm)
          - seperate policy from mechaism (what, how, who does what)
            - kernel vs privileged code vs user space
            - kernel has minimum
          - seperate interface from engiens
          - Linux
            - favour config files over scripts
              - reduces repetition
            - ease of machine manipulability over human 
              - auto-configure, see Puppet
            - (dbus, inetd)
          - Perl, Larry Wall : Manipulexity vs. Whipupitude
            - "I realized at that point that there was a huge ecological niche between the C language and Unix shells. C was good for manipulating complex things  - you can call it 'manipulexity.' And the shells were good at whipping up things - what I call 'whipupitude.' But there was this big blank area where neither C nor shell were good, and that's where I aimed Perl." 
        - http://groveronline.com/2013/10/oreilly-webcast-the-linux-way-and-natural-selection-among-distros/
        - http://www.pappp.net/?p=969
      - intelligent, autonomous agents 
        - acts on behalf of user
        - philosopher's stone of AI
    - Web as Platform Revisited
      - gartner curve etc. what fell off?
      - In 2004, the term began its rise in popularity when O'Reilly Media and MediaLive hosted the first Web 2.0 conference. In their opening remarks, John Battelle and Tim O'Reilly outlined their definition of the "Web as Platform",
      - Centralized, Decentralized and Distributed systems
        - Paul Baran http://networkcultures.org/wpmu/unlikeus/resources/articles/what-is-a-federated-network/
      - Mashups and APIs
      - Javascript, JSON and Ajax
        - Ajax as another abstraction of HTTP
      - Web APIs Are Just Web Sites
      - Top-down vs. bottom-up
    - Hypermedia
      - "Hypermedia Types are MIME media types that contain native hyper-linking semantics that induce application flow. For example, HTML is a hypermedia type; XML is not." Mike Amundsen (2010)
      - REST, WebArch
        - http://www.w3.org/TR/webarch/
      - Content Negotiation
      - Decoupling
        - Decoupling CMSs
          - http://decoupledcms.org/
            - (come back to this in Linked Data section)
            - client -> server JSON-LD 
            - server -> client HTML+RDFa
              - RDFa used as part of templating system
              - bonus is it's reusable by 3rd parties
          - can be extended to decouple data
      - first coined 1965 Ted Nelson
    - Services as Agents
      - failings of RPC (e.g. SOAP)
        - http://www.edshare.soton.ac.uk/9340/1/01_-_Overview_and_Introduction.pdf
        - tightly coupled
        - many APIs not really RESTful
        - JSON with URLs is not hypermedia, is in effect proprietary
      - functional programming - reducing side effects
      - FIPA
      - modularization - osgi
      - http://en.wikipedia.org/wiki/Software_agent
      - http://en.wikipedia.org/wiki/Intelligent_agent
      - approx general model for a Web agent
        - not very intelligent!
        - HTTP client and server as I/O, indexed local store with query/search facility, app-specific behaviour
        - virtually all Web systems can be seen as (possibly degenerate) forms
        - may be used in Centralized, Decentralized and Distributed networks
        - client-in-server
        - server-in-browser
      - in-browser JS behaviour can be viewed as a relocatable agent
        - REST : Code-On-Demand
        - relocatable server-side code?
          - open issues : security etc.
        - working with other Patterns
          - MVC
          - http://en.wikipedia.org/wiki/Data_access_object
      - https://ifttt.com/
      - browser code server side
        - http://phantomjs.org/
      - https://github.com/jed/browserver-client
      - https://github.com/jed/browserver-node
      - another on the internet can initiate actions in the browser
    - URLs are the Key (literally)
      - "follow your nose" protocol
      - Web-wide pluggability, URLs as integration points
      - URLs as database identifiers
      - HTTP based agents can negotiate to other protocols if appropriate
        - WebSockets should be useful
      - http://www.berjon.com/blog/2013/06/linked-data.html
      - http://www.plasticbag.org/files/native/native_to_a_web_of_data.pdf
      - http://www.jenitennison.com/blog/node/159
    - Data on the Web
      - Linked Data
        - old semweb 
          - URIs for identifiers of things, concepts
          - triple model
          - triplestore as DB replacement
          - not very webby
          - RDF/XML
        - new semweb 
          - *URLs* for things, concepts
          - "follow your nose" for discovery
          - triples + named graphs
          - SPARQL
          - more focus on R/W Web
          - Turtle
          - RDFa - microformats on steroids
            - http://manu.sporny.org/2013/microdata-downward-spiral/
            - Yahoo, Google, US and UK governments, Drupal, Facebook, Newsweek, Tesco just to name a few. Bestbuy in the US reports that it improved their Google rank tremendously, gave a 30% increase in traffic, and a 15% increase in click-throughs. Last time it was measured, nearly 4% of websites used RDFa "fastest growing format on the web".
            - http://tripletalk.wordpress.com/2011/01/25/rdfa-deployment-across-the-web/
            - vs. mircodata
              - danbri : The RDFa data tends to be rather thin, but seen on more domains, because it's mostly OGP - short bit of text, long bit of text, a category, an image, a link. Microdata tends to be mostly Schema.org, and carries more items per page, and more inter-relationships, but it's seen on fewer domains. Do we care more to see graph markup on more domains, or richer descriptions on those that do use it?
          - JSON-LD
            - http://manu.sporny.org/2013/json-ld-is-the-bees-knees/
        - open data
          - LOD cloud
          - dbPedia
          - http://staff.science.uva.nl/~marx/teaching/DataAnalytics/UvA2sep2013.pdf
        - timbl's 5 stars
          - ★ make your stuff available on the Web (whatever format) under an open license
          - ★★  make it available as structured data (e.g., Excel instead of image scan of a table)
          - ★★★ use non-proprietary formats (e.g., CSV instead of Excel)
          - ★★★★    use URIs to denote things, so that people can point at your stuff   
          - ★★★★★   link your data to other data to provide context
        - Semantic Web revised
          - "Don't make me think about linked data " http://www.berjon.com/blog/2013/06/linked-data.html
          - Google knowledgebase
          - Schema.org
        - URIs as identifiers/locators not limited to HTTP
    - Putting it all together
    - Appendices
      - A Relevant specs
      - 
    - js solutions
      - create.js
      - node.js
      - Seki - decoupled data
  - Fluent proposal
    - WebHooks
      - http://en.wikipedia.org/wiki/Hooking
      - http://en.wikipedia.org/wiki/Webhook
      - https://www.webscript.io/
      - https://webhooks.pbworks.com/w/page/13385124/FrontPage
      - 2007 http://progrium.com/blog/2007/05/03/web-hooks-to-revolutionize-the-web/
      - http://progrium.com/blog/2012/11/19/from-webhooks-to-the-evented-web/
    - http://www.edwardtufte.com/tufte/advocate_flatland2
    - http://seriouspony.com/blog/2013/10/4/presentation-skills-considered-harmful
    - http://homepages.cwi.nl/~steven/Talks/2013/01-11-future-internet/
    - http://www.w3.org/TR/ws-gloss/
    - Motivation
      - Proposal Description
        - With a gentle change in mindset, established well-known standards can be used to decouple system components and simultaneously simplify development and maintenance within the organization. A side effect is expanded opportunities for community development. The link is the key.
      - most developers want to build a product that thrives in its environment - and that environment is the Web
      - bringing well-known benefits of modularity (such as resilience, simplified development and maintenance) to the Web
      - small, distributed projects linkable into a greater whole
      - better exploiting Web standards
    - History
      - pre-Web
        - Unix philosophy of small cooperating tools with standardized inputs and outputs. It is this philosophy, and the architecture based on it, that has allowed open source projects to be assembled into larger systems such as Linux, without explicit coordination between developers.
        - The Unix Way
          -  "Write programs that do one thing and do it well. Write programs to work together. Write programs to handle text streams, because that is a universal interface."
          - keep it simple
          - everything is a file
          - programs that do oe thig ad do it well
          - programs that work together
            - doesn't work for graphic apps
          - portability over efficiency
          - data i flat text files
            - for reusability
          - use software leverage (reuse)
          - use shell scripts for portability & leverage
          - user knows what they are doing (rm)
          - seperate policy from mechaism (what, how, who does what)
            - kernel vs privileged code vs user space
            - kernel has minimum
          - seperate interface from engiens
          - Linux
            - favour config files over scripts
              - reduces repetition
            - ease of machine manipulability over human 
              - auto-configure, see Puppet
            - (dbus, inetd)
          - Perl, Larry Wall : Manipulexity vs. Whipupitude
            - "I realized at that point that there was a huge ecological niche between the C language and Unix shells. C was good for manipulating complex things  - you can call it 'manipulexity.' And the shells were good at whipping up things - what I call 'whipupitude.' But there was this big blank area where neither C nor shell were good, and that's where I aimed Perl." 
        - http://groveronline.com/2013/10/oreilly-webcast-the-linux-way-and-natural-selection-among-distros/
        - http://www.pappp.net/?p=969
      - intelligent, autonomous agents 
        - acts on behalf of user
        - philosopher's stone of AI
    - Web as Platform Revisited
      - gartner curve etc. what fell off?
      - In 2004, the term began its rise in popularity when O'Reilly Media and MediaLive hosted the first Web 2.0 conference. In their opening remarks, John Battelle and Tim O'Reilly outlined their definition of the "Web as Platform",
      - Centralized, Decentralized and Distributed systems
        - Paul Baran http://networkcultures.org/wpmu/unlikeus/resources/articles/what-is-a-federated-network/
      - Mashups and APIs
      - Javascript, JSON and Ajax
        - Ajax as another abstraction of HTTP
      - Web APIs Are Just Web Sites
      - Top-down vs. bottom-up
    - Decoupling
      - REST, WebArch
        - http://www.w3.org/TR/webarch/
      - Hypermedia
        - first coined 1965 Ted Nelson
        - "Hypermedia Types are MIME media types that contain native hyper-linking semantics that induce application flow. For example, HTML is a hypermedia type; XML is not." Mike Amundsen (2010)
      - Content Negotiation
      - Decoupling CMSs
        - http://decoupledcms.org/
          - (come back to this in Linked Data section)
          - client -> server JSON-LD 
          - server -> client HTML+RDFa
            - RDFa used as part of templating system
            - bonus is it's reusable by 3rd parties
        - can be extended to decouple data
    - Services or Agents?
      - failings of RPC (e.g. SOAP)
        - tightly coupled
        - many APIs not really RESTful
        - JSON with URLs is not hypermedia, is in effect proprietary
      - functional programming - reducing side effects
      - http://en.wikipedia.org/wiki/Software_agent
      - http://en.wikipedia.org/wiki/Intelligent_agent
      - approx general model for a Web agent
        - not very intelligent!
        - HTTP client and server as I/O, indexed local store with query/search facility, app-specific behaviour
        - virtually all Web systems can be seen as (possibly degenerate) forms
        - may be used in Centralized, Decentralized and Distributed networks
        - client-in-server
        - server-in-browser
      - in-browser JS behaviour can be viewed as a relocatable agent
        - REST : Code-On-Demand
        - relocatable server-side code?
          - open issues : security etc.
        - working with other Patterns
          - MVC
          - http://en.wikipedia.org/wiki/Data_access_object
      - https://ifttt.com/
      - browser code server side
        - http://phantomjs.org/
      - https://github.com/jed/browserver-client
      - https://github.com/jed/browserver-node
      - another on the internet can initiate actions in the browser
    - URLs are the Key (literally)
      - "follow your nose" protocol
      - Web-wide pluggability, URLs as integration points
      - URLs as database identifiers
      - HTTP based agents can negotiate to other protocols if appropriate
        - WebSockets should be useful
      - http://www.berjon.com/blog/2013/06/linked-data.html
      - http://www.plasticbag.org/files/native/native_to_a_web_of_data.pdf
      - http://www.jenitennison.com/blog/node/159
    - Linked Data
      - old semweb 
        - URIs for identifiers of things, concepts
        - triple model
        - triplestore as DB replacement
        - not very webby
        - RDF/XML
      - new semweb 
        - *URLs* for things, concepts
        - "follow your nose" for discovery
        - triples + named graphs
        - SPARQL
        - more focus on R/W Web
        - Turtle
        - RDFa - microformats on steroids
          - http://manu.sporny.org/2013/microdata-downward-spiral/
          - Yahoo, Google, US and UK governments, Drupal, Facebook, Newsweek, Tesco just to name a few. Bestbuy in the US reports that it improved their Google rank tremendously, gave a 30% increase in traffic, and a 15% increase in click-throughs. Last time it was measured, nearly 4% of websites used RDFa "fastest growing format on the web".
          - http://tripletalk.wordpress.com/2011/01/25/rdfa-deployment-across-the-web/
          - vs. mircodata
            - danbri : The RDFa data tends to be rather thin, but seen on more domains, because it's mostly OGP - short bit of text, long bit of text, a category, an image, a link. Microdata tends to be mostly Schema.org, and carries more items per page, and more inter-relationships, but it's seen on fewer domains. Do we care more to see graph markup on more domains, or richer descriptions on those that do use it?
        - JSON-LD
          - http://manu.sporny.org/2013/json-ld-is-the-bees-knees/
      - open data
        - LOD cloud
        - dbPedia
        - http://staff.science.uva.nl/~marx/teaching/DataAnalytics/UvA2sep2013.pdf
      - timbl's 5 stars
        - ★ make your stuff available on the Web (whatever format) under an open license
        - ★★    make it available as structured data (e.g., Excel instead of image scan of a table)
        - ★★★   use non-proprietary formats (e.g., CSV instead of Excel)
        - ★★★★  use URIs to denote things, so that people can point at your stuff   
        - ★★★★★ link your data to other data to provide context
      - Semantic Web revised
        - "Don't make me think about linked data " http://www.berjon.com/blog/2013/06/linked-data.html
        - Google knowledgebase
        - Schema.org
      - URIs as identifiers/locators not limited to HTTP
    - js solutions
      - create.js
      - node.js
      - Seki - decoupled data
  - Salzburg
    - Emerging Solutions
      - Danny Ayers
      - License
    - changing reality
    - Contents
      - A Brief History
      - Core Semantic Web notions
      - Emerging Systems
    - Prehistory 
      - Neats
      - Scruffies
      - http://en.wikipedia.org/wiki/Neats_vs._scruffies
    - People, World, Software
    - Abraham Maslow [image] 1943
      - http://en.wikipedia.org/wiki/Maslow's_hierarchy_of_needs
    - Knowledge Hierarchy, David Skyrme 1999 
      - http://www.skyrme.com/
    - TimBL proposal 1989
      - http://www.w3.org/History/1989/proposal.html
    - Jorge Luis Borges Library of Babel
      - http://en.wikipedia.org/wiki/Library_of_Babel
    - All about the documents
    - Search
    - Sergey Brin, around 2002
      - "Look, putting angle brackets around things is not a technology, by itself. I'd rather make progress by having computers understand what humans write, than by forcing humans to write in ways computers can understand."
      - http://jonudell.net/udell/2002-09-19-googles-sergey-brin.html
    - Document metadata
      - PICS [image]
      - Platform for Internet Content Selection
      - Rating for censorship
      - Local interest
      - Education level/value
      - http://www.w3.org/PICS/
    - Briefly
      - RDF as data language
      - OWL etc.
      - SPARQL
      - Linked Data
      - Doc metadata NG
    - "It's all about the docs"
    - "No, it's all about the things"
      - birds flying into glass
    - "Ok, maybe the docs are important after all"
    - Synthesis
    - Semantic Web : Core Concepts
    - All models are wrong, but some are useful.
      - http://en.wikipedia.org/wiki/George_E._P._Box
    - RDF
    - Language : Vocabulary, Grammar and Syntax
    - Knowledge Representation
    - Data Model
      - Entity-Relationship
    - Triples
      - subject property object
    - "my dog's name is Basil, he is a Hovawart"
      - turtle
    - Open World Assumption
      - Comparable to 404 Not Found
      - Missing isn't broken 
    - Vocabs/Ontologies
      - Hovawart subClassOf Dog
    - Vocab Specification
      - language spec, e.g. HTML, Atom
      - registry
      - distributed
      - 
    - Relaxation of constraints
    - schema.org : quasi-centralized
      - Google Rich Snippets
    - Syntaxes
      - ntriples/quads
      - Turtle
      - RDF/XML
      - RDFa
      - GRDDL
      - Microformats
      - Microdata
      - JSON-LD
    - The Web
      - state machine
      - pages are states
    - Meaning Triangle
      - http://en.wikipedia.org/wiki/Triangle_of_reference
    - Anything can be identified with a URI
    - Anything important should be identified with a URI
      - globally unique
      - express authority
      - resolvable
      - linkable
    - Floaty Web
    - Follow your nose
    - Named Graphs
    - Links are Data
      - table
      - silo
    - SPARQL
      - example
    - Linked Data
      - component parts of statements can be treated as links. 
      - each statement can be considered a (typed) link :
      - subject --property--> object
      - http://linkeddatabook.com/book
    - Linked Open Data 5 Stars
      - ★ make your stuff available on the Web (whatever format) under an open license
      - ★★  make it available as structured data (e.g., Excel instead of image scan of a table)
      - ★★★ use non-proprietary formats (e.g., CSV instead of Excel)
      - ★★★★ use URIs to identify things, so that people can point at your stuff
      - ★★★★★ link your data to other data to provide context
      - http://5stardata.info/
      - http://www.w3.org/DesignIssues/LinkedData.html
    - Linked Data Cloud
    - Other semantics - NLP, entity extraction
    - *******
    - Serendipity
    - Sundial
    - Astronomical Model - Orreries
      - http://en.wikipedia.org/wiki/Orrery
    - For a language to be useful, it needs agents
    - agents
    - REST Constraints include:
      - http://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm
      - Chapters 5 and 6
      - Web APIs Are Just Web Sites 
      - see also Introduction to a REST API Style http://www.youtube.com/watch?v=6UXc71O7htc
    - Manipulation of resources through representations
      - representations are Web Pages 
      - note media type
    - Uniform Interface
    - Self-descriptive messages
      - headers plus body
    - Identification of resources
    - Hypermedia as the engine of application state
      - State Machines
      - States are Web Pages
      - Transitions are hyperlinks
      - Web pages include links
    - Hypermedia needs links
    - Tyranny of the Browser
      - probably ok for the future
    - Relaxation of constraints #2
      - Rich Internet Applications
      - "Apps" vs. hypermedia
    - Read/Write Web
    - POSTing
      - form-encoded
      - WebDAV
      - Ajax/JSON
      - Atom Publishing Protocol
      - SPARQL 1.1 Update
    - Affordances 
      - interaction model
      - follow your nose
      - Eric Wilde http://dret.typepad.com/
      - Mike Amundsen http://www.amundsen.com/blog/
    - Separation of Concerns
      - data model
      - interaction model
    - Reducing friction
    - driven by Open Source
      - get
      - fork
      - hack
      - share
      - danny vid http://www.youtube.com/watch?v=sGqJbB4lhvY
      - github etc
    - *******
    - Interesting Initiatives
    - Read/Write Web
    - Federated Social Web
    - Web Intents
      - http://webintents.org/
    - Linked Data Platform WG
      - http://www.w3.org/2012/ldp/charter
    - Unhosted
      - http://unhosted.org
    - Semantic Web in a Box
    - The Big Intuition 
      - A Semantic Web-friendly application costs no more to develop than a traditional one
      - Short term : increased surface area, good for SEO
      - Longer term : easy reuse
    - Blue Oceans
      - no two companies are offering the same product or service
      - capturing new demand rather than competing for existing market-share
      - innovation!
      - http://en.wikipedia.org/wiki/Blue_Ocean_Strategy
      - http://www.talis.com/nodalities/pdf/nodalities_issue2.pdf
  - Salzburg
    - http://wiki.iks-project.eu/index.php/Workshops/Salzburg2012
    - http://www.iks-project.eu/
    - investigate IKS projects
    - apply to my blog
    - https://docs.google.com/document/d/1XzdsjCfPylcyOoNtDfAgz15HwRdCD-0e0ixh21_U0y0/edit?hl=en_US&pli=1
  - Maximising surface area :
    - reduce friction
    - for wider distribution
    - simplify addition of content/data
      - multiple modes
  - Agents
    - motivation :
      - merging best bitzs of Web Services, Agents & functional programming
      - performance
      - managing complexity
    - messages (data) can be functions (functional programming), all nouns, not really verbs
    - in the same way the messaging protocol can be negotiated, functions can be negotiated to optimized versions, e.g. table lookup
    - no (shared mutable) state - use monoids, monads
      - needs associativity & identity
    - composition from small parts (to control complexity) - composability operator - degree symbol Ctrl+⇧ Shift+UB0. °
    - in a trivial way, media type can correspond to function types f: T -> T
      - what about functions around? need argument, result types...
        - put it in turtle!
        - f receives X;
        - produces Y;
        - codeType C;
        - inline "some code" .
          - or code <resource>
  - Specs
    - http://tools.ietf.org/html/draft-ietf-httpbis-p2-semantics-24
  - Creative Writing
    - http://typem4murder.blogspot.it/2010/12/poes-5-rules.html
    - http://murderby4.blogspot.it/2010/06/13-types-of-mysteries.html
  - A Manifesto for Web Agents (/hyperdata manifesto?)
    - PXD : A Manifester on Desktop
    - Manifesto design
      -  thesis, antithesis, synthesis (Hegel)
      - use Seki - manifesto is also demonstration
      - main text has plain English overview
      - link/outline collapse of technical details
      - ditto of simple explanations
      - include glossary
      - big linkage
    - Core values and beliefs
      - communication is good, so anything which reduces friction, misunderstanding is likely to be beneficial
      - support diversity, through uniformity
        - Lego analogy - single colour/shape bricks
      - inclusive
      - Everythings Amazing & Nobodys Happy
        - http://www.youtube.com/watch?v=8r1CZTLk-Gk
      - Connolly's bane - http://www.ninebynine.org/SWAD-E/Scenario-HomeNetwork/HomeNetwork/HomeNetwork-347.htm
        - "The bane of my existence is doing things I know the computer could do for me."
        - extend: not knowing what my computer could do for me
          - what if someone from 1980 was shown a web browser?
      - http://www.slideshare.net/jurgenappelo/complexity-versus-lean
      - serendipity
        - Re. ontologies: "Does it answer a business question or—better—does it anticipate & address the next question.” - https://twitter.com/#!/kerfors/status/190058712705142784
        - Interesting quote from an AI course: "The value of a piece of information is proportional to the chance that you will act on it times the benefit of acting on it." - James Simmons FB
        - (failure of analogies, language - need words to think about things (who?))
      - google's ten things : http://www.google.com/about/company/philosophy/
    - progressive enhancement: server-side too
    - omni-functional vs.do one thing only and do it well
      - http://home.zcubes.com/
    - there are more activities than browsing
    - current top apps/sites
      - http://gizmodo.com/5890602/the-most-popular-iphone-and-ipad-apps-of-all-time
      - http://www.alexa.com/topsites
    - interactions/affordances - hypermedia
      - iframes by danbri, via Flickr pinned
    - visibility of data
      - Tantek
    - every resource should have one canonical internal representation (for DRY)
      - this should be advertised if possible (Link header? q factors)
    - measure everything, iterate
    - http://peterfox.com.au/manifesto_write.htm
    - http://www.ninebynine.org/SWAD-E/Scenario-HomeNetwork/HomeNetwork/HomeNetwork-347.htm
  - One-Liners
    - the better things are described, the more reusable they are
    - Cyber Sutra!
  - IEEE Piece
    - If computers were human
      - world turned upsde down
      - layered abstraction the other way up, starting with humans
      - yay! http://wronghands1.wordpress.com/2012/03/01/the-outernet/
    - 
    - Affordances
    - http://www.makemedia.com/blog/2012/03/15/what-is-the-future-for-web-intents/
    - Dark Ages
      - ??? taking a photo rather than experiencing the moment ???
    - embodied AI
      - http://en.wikipedia.org/wiki/Embodied_cognition
  - Affordances
    - RDFPub
      - http://www.amundsen.com/blog/archives/1083
      - http://tools.ietf.org/html/rfc5023#section-5
    - http://www.aaronsw.com/weblog/000931
    - http://www.bbc.co.uk/news/business-16968125
      - TiddlyWiki
    - Named Graphs as modular programs
      - components are literal javascript functions 
        - possibly tied to queries
        - https://github.com/antoniogarrote/rdfstore-js
        - http://code.google.com/p/rdfquery/
      - Entity/Component
        - http://piemaster.net/2011/07/entity-component-primer/
    - [gesture] does get on resource, including found triples in current graph
    - http://stateless.co/hal_specification.html
    - Intents
      - http://designpush.pbworks.com/w/page/48061310/FrontPage
      - http://www.makemedia.com/blog/2012/03/15/what-is-the-future-for-web-intents/
  - Zoom!
    - the different kinds of info we need when working on a project
    - remote control joystick analogy?
  - Creative Writing
    - http://www.ted.com/talks/andrew_stanton_the_clues_to_a_great_story.html
    - http://www.katsommers.com/projects/how-not-to-write-a-novel/
  - Jottings
    - Cloud = commodification of infrastructure (but - p@ : RaisetheUnitofcurrencytobeapplication&servicesinsteadofinfrastructure
    - 
  - "How Should the Web Work?"
    - open a browser, start typing
    - modes stuff?
    - why do I go to gmail.com when I want to see things related to danny.ayers@gmail.com?
- Misc Project Ideas
  - cartoon reader : do ocr on text, identify character in pic
  - true random number generator - USB
    - http://arduino.cc/en/Main/ArduinoBoardNano
    - http://www.createthis.com/products/create-this-arduino-nano-enclosure-3d-printed
  - syntheton
  - Plan A
    - one person takes each app to MVP
    - "make it happen"
    - Golden Rules
      - incremental improvements must always be possible
        - when switching work activity, leave things so they can be restarted without effort
- Personal
  - Acamprosate, also known as N-acetyl homotaurine[2] and by the brand name Campral, 
- General Reading
  - https://medium.com/how-to-use-the-internet/3fb3669cc794
  - http://www.hypebot.com/hypebot/2013/09/what-social-media-is-doing-to-music-hint-its-not-good.html
